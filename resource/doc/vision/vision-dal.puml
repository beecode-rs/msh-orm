@startuml
    folder "src/dal" as src_dal_fba75381 {
      card entity_type_9c71b9e6 [
        EntityType
        ---
        {
          id: ID
          [key: string]: any
        }
      ]
      card string_key_object_9c71b9e6 [
        StringKeyObject
        ---
        { [k: string]: T }
      ]
      card orm_find_one_options_9c71b9e6 [
        OrmFindOneOptions
        ---
        Partial<OrmRelationsOptions> & OrmFilterOptions
      ]
      card orm_find_one_by_id_options_9c71b9e6 [
        OrmFindOneByIdOptions
        ---
        Partial<OrmRelationsOptions>
      ]
      card orm_find_many_options_9c71b9e6 [
        OrmFindManyOptions
        ---
        Partial<OrmFilterOptions & OrmSortOptions & OrmPagingOptions & OrmRelationsOptions>
      ]
      interface "CommonDalImplementable" as common_dal_implementable_9c71b9e6 {
        + findOne(options?: OrmFindOneOptions): Promise<Entity>
        + findOneById(id: string,\n options?: OrmFindOneByIdOptions): Promise<Entity>
        + findMany(options?: OrmFindManyOptions): Promise<Entity[]>
        + addBulk(entities: Partial<Entity>[]): Promise<Entity[]>
        + editBulk(entities: Partial<Entity>[]): Promise<Entity[]>
        + removeBulk(entity: Partial<Entity>[]): Promise<void>
        + removeByIds(ids: string[]): Promise<void>
      }
      abstract "CommonDal" as common_dal_360219ee {
        # _dal: CommonDalImplementable<Entity>
        # {abstract} _entityToModels(...entities: Entity[]): Model[]
        # {abstract} _modelToEntities(...models: Partial<Model>[]): Partial<Entity>[]
        + add(model: Partial<Model>): Promise<Model>
        + addBulk(models: Partial<Model>[]): Promise<Model[]>
        # constructor(dal: CommonDalImplementable<Entity>)
        + edit(model: Partial<Model>): Promise<Model>
        + editBulk(models: Partial<Model>[]): Promise<Model[]>
        + findMany(options?: OrmFindManyOptions): Promise<Model[]>
        + findOne(params?: OrmFindOneOptions): Promise<Model>
        + findOneById(id: string,\n options?: OrmFindOneByIdOptions): Promise<Model>
        + remove(model: Partial<Model>): Promise<void>
        + removeBulk(models: Partial<Model>[]): Promise<void>
        + removeById(id: string): Promise<void>
        + removeByIds(ids: string[]): Promise<void>
      }
      enum "OrmComparisonOperator" as orm_comparison_operator_b1a66587 {
        BETWEEN = '$between'
        GREATER_THEN = '$>'
        GREATER_THEN_EQUAL = '$>='
        IN = '$in'
        LESS_THEN = '$<'
        LESS_THEN_EQUAL = '$<='
        NOT_EQUAL = '$<>'
      }
      enum "OrmLogicalOperator" as orm_logical_operator_b1a66587 {
        AND = '$and'
        NOT = '$not'
        OR = '$or'
      }
      enum "OrmBetweenInclude" as orm_between_include_b1a66587 {
        BOTH = 'both'
        FROM = 'from'
        TO = 'to'
      }
      object "ORM_COMPARISON_OPERATIONS" as orm_comparison_operations_b1a66587 {
      }
      object "ORM_LOGICAL_OPERATIONS" as orm_logical_operations_b1a66587 {
      }
      object "ORM_FILTER_OPERATIONS" as orm_filter_operations_b1a66587 {
      }
      object "ORM_BETWEEN_INCLUDE" as orm_between_include_b1a66587 {
      }
      card orm_between_include_type_b1a66587 [
        OrmBetweenIncludeType
        ---
        typeof ORM_BETWEEN_INCLUDE[number]
      ]
      card orm_comparison_operations_type_b1a66587 [
        OrmComparisonOperationsType
        ---
        typeof ORM_COMPARISON_OPERATIONS[number]
      ]
      card orm_logical_operations_type_b1a66587 [
        OrmLogicalOperationsType
        ---
        typeof ORM_LOGICAL_OPERATIONS[number]
      ]
      card orm_filter_operations_type_b1a66587 [
        OrmFilterOperationsType
        ---
        typeof ORM_FILTER_OPERATIONS[number]
      ]
      card orm_filter_operations_key_b1a66587 [
        OrmFilterOperationsKey
        ---
        OrmFilterOperationsType | string
      ]
      card orm_filter_option_b1a66587 [
        OrmFilterOption
        ---
        { [k: OrmFilterOperationsKey]: OrmFilterOption | any }
      ]
      card orm_filter_options_b1a66587 [
        OrmFilterOptions
        ---
        { filter: OrmFilterOption }
      ]
      object "Not" as not_b1a66587 {
      }
      object "betweenIncludeOperation" as between_include_operation_b1a66587 {
      }
      object "Between" as between_b1a66587 {
      }
      object "In" as in_b1a66587 {
      }
      object "Or" as or_b1a66587 {
      }
      object "And" as and_b1a66587 {
      }
      object "EQ" as eq_b1a66587 {
      }
      object "NEQ" as neq_b1a66587 {
      }
      object "GT" as gt_b1a66587 {
      }
      object "GTE" as gte_b1a66587 {
      }
      object "LT" as lt_b1a66587 {
      }
      object "LTE" as lte_b1a66587 {
      }
      card pagination_be8a25ab [
        Pagination
        ---
        { page: number; pageSize: number }
      ]
      card orm_paging_options_be8a25ab [
        OrmPagingOptions
        ---
        { pagination: Pagination }
      ]
      card orm_relations_options_2a612572 [
        OrmRelationsOptions
        ---
        { relations: string[] }
      ]
      card orm_sort_options_ff401cdd [
        OrmSortOptions
        ---
        { sortByList: string[] }
      ]
    }
  common_dal_360219ee -up-> common_dal_implementable_9c71b9e6
  common_dal_360219ee -up-> orm_find_many_options_9c71b9e6
  common_dal_360219ee -up-> orm_find_one_by_id_options_9c71b9e6
  common_dal_360219ee -up-> orm_find_one_options_9c71b9e6
  not_b1a66587 -up-> orm_filter_option_b1a66587
  between_include_operation_b1a66587 -up-> orm_between_include_b1a66587
  between_b1a66587 -up-> between_include_operation_b1a66587
  eq_b1a66587 -up-> orm_filter_option_b1a66587
  neq_b1a66587 -up-> orm_filter_option_b1a66587
  gt_b1a66587 -up-> orm_filter_option_b1a66587
  gte_b1a66587 -up-> orm_filter_option_b1a66587
  lt_b1a66587 -up-> orm_filter_option_b1a66587
  lte_b1a66587 -up-> orm_filter_option_b1a66587
@enduml